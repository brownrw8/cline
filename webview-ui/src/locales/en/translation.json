{
	"announcement": {
		"newInVersion": "New in version {{version}}",
		"newChangesList": [
			"<b>Plan/Act mode toggle:</b> Plan mode lets Cline focus on gathering information, asking clarifying questions, brainstorm ideas, and architect a solution. Switch back to Act mode to let him execute the plan!",
			"<b>Quick API/model switching</b> with a new popup menu under the chat field",
			"<b>VS Code LM API</b> lets you use models from other extensions like GitHub Copilot",
			"<b>MCP server improvements:</b> On/off toggle to disable servers when not in use, and Auto-approve option for individual tools",
			"In case you missed it, Cline now supports Checkpoints! <Link href=\"https://x.com/sdrzn/status/1876378124126236949\">See it in action here.</Link>"
		],
		"joinOurCommunities": "Join our <DiscordLink>Discord</DiscordLink> or <RedditLink>Reddit</RedditLink> for more updates!"
	},
	"settingsView": {
		"settings": "Settings",
		"done": "Done",
		"language": "Language",
		"customInstructions": "Custom Instructions",
		"customInstructionsPlaceholder": "e.g. \"Run unit tests at the end\", \"Use TypeScript with async/await\", \"Speak in Japanese\"",
		"customInstructionsDescription": "These instructions are added to the end of the system prompt sent with every request.",
		"debug": "Debug",
		"resetState": "Reset State",
		"resetStateDescription": "This will reset all global state and secret storage in the extension.",
		"feedback": "If you have any questions or feedback, feel free to open an issue at",
		"version": "v"
	},
	"apiOptions": {
		"selectModel": "Select a Model...",
		"model": "Model",
		"apiProvider": "API Provider",
		"enterApiKey": "Enter API Key...",
		"apiKey": "API Key",
		"enterBaseUrl": "Enter Base URL...",
		"baseUrl": "Base URL",
		"enterModelId": "Enter Model ID...",
		"modelId": "Model ID",
		"useCustomBaseUrl": "Use custom base URL",
		"apiKeyInfo": "This key is stored locally and only used to make API requests from this extension.",
		"getApiKeyMessage": "You can get an {{vendor}} API key by signing up here.",
		"getApiVendorKey": "{{vendor}} API Key",
		"getCompatibleVendor": "{{vendor}} Compatible",
		"enterGcpProjectId": "Enter Project ID...",
		"gcpProjectId": "Google Cloud Project ID",
		"gcpLinks": "To use Google Cloud Vertex AI, you need to <Link href=\"https://cloud.google.com/vertex-ai/generative-ai/docs/partner-models/use-claude#before_you_begin\"> 1) create a Google Cloud account › enable the Vertex AI API › enable the desired Claude models, </Link><br /> <Link href=\"https://cloud.google.com/docs/authentication/provide-credentials-adc#google-idp\"> 2) install the Google Cloud CLI › configure Application Default Credentials. </Link>",
		"enterAwsAccessKey": "Enter Access Key...",
		"awsAccessKey": "AWS Access Key",
		"enterAwsSecretKey": "Enter Secret Key...",
		"awsSecretKey": "AWS Secret Key",
		"enterAwsSessionToken": "Enter Session Token...",
		"awsSessionToken": "AWS Session Token",
		"getRegion": "{{vendor}} Region",
		"selectRegion": "Select a Region...",
		"useCrossRegionInference": "Use cross-region inference",
		"awsInfo": "Authenticate by either providing the keys above or use the default AWS credential providers, i.e. ~/.aws/credentials or environment variables. These credentials are only used locally to make API requests from this extension.",
		"vscodeLanguageModelsInfo": "The VS Code Language Model API allows you to run models provided by other VS Code extensions (including but not limited to GitHub Copilot). The easiest way to get started is to install the Copilot extension from the VS Marketplace and enabling Claude 3.5 Sonnet.",
		"experimentalFeature": "Note: This is a very experimental integration and may not work as expected.",
		"supportsImages": "Supports images",
		"doesNotSupportImages": "Does not support images",
		"supportsComputerUse": "Supports computer use",
		"doesNotSupportComputerUse": "Does not support computer use",
		"supportsPromptCache": "Supports prompt caching",
		"doesNotSupportPromptCache": "Does not support prompt caching",
		"maxOutput": "Max output",
		"tokens": "tokens",
		"inputPrice": "Input price",
		"millionTokens": "million tokens",
		"cacheWritesPrice": "Cache writes price",
		"cacheReadsPrice": "Cache reads price",
		"outputPrice": "Output price",
		"geminiInfo": "* Free up to {{selectedModelId}} requests per minute. After that, billing depends on prompt size.",
		"pricingDetails": "For more info, see pricing details."
	}
}
